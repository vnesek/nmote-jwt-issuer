buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '1.5.13.RELEASE'
        ningVersion = '1.9.38'
        restfbVersion = '2.5.0'
        scribejavaVersion = '4.2.0'
        ahcVersion = '2.0.30'
        jwtVersion = '0.9.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.20.0'
}


apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
description = 'JWT Token Issuer'

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

jar {
    baseName = 'issuer'
    version = ['git', 'rev-parse', '--short', 'HEAD'].execute().text.trim()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "com.github.scribejava:scribejava-apis:$scribejavaVersion"
    compile "com.github.scribejava:scribejava-httpclient-ahc:$scribejavaVersion"
    compile "org.asynchttpclient:async-http-client:$ahcVersion"
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile "com.restfb:restfb:$restfbVersion"
    compile "io.jsonwebtoken:jjwt:$jwtVersion"

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

springBoot {
    executable = true
    embeddedLaunchScriptProperties = [
            initInfoDescription     : project.description,
            initInfoShortDescription: project.name,
            initInfoProvides        : jar.baseName,
            mode                    : 'service'
    ]
}
